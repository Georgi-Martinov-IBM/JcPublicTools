<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="shared">CQpwdWJsaWMgc3RhdGljIFN0cmluZyBmaW5kUGF0aChTdHJpbmcgYmFzZVBhdGgsIFN0cmluZyBm
aWxlKSB7CiAgICAKCUZpbGVbXSBmaWxlcyA9IG5ldyBGaWxlKGJhc2VQYXRoKS5saXN0RmlsZXMo
KTsKCVN0cmluZyBmb3VuZFBhdGg7CgoJZm9yIChpbnQgaSA9IDA7IGkgPCBmaWxlcy5sZW5ndGg7
IGkrKykgewoJCQkJCQoJCWlmIChmaWxlLmVxdWFscyhmaWxlc1tpXS5nZXROYW1lKCkpKSB7CgkJ
CXJldHVybiBmaWxlc1tpXS5nZXRBYnNvbHV0ZVBhdGgoKTsKCQl9IGVsc2UgaWYgKGZpbGVzW2ld
LmlzRGlyZWN0b3J5KCkpIHsKCQkJZm91bmRQYXRoID0gZmluZFBhdGgoZmlsZXNbaV0uZ2V0QWJz
b2x1dGVQYXRoKCksIGZpbGUpOwoJCQkKCQkJaWYgKGZvdW5kUGF0aCAhPSBudWxsKSB7CgkJCQly
ZXR1cm4gZm91bmRQYXRoOwoJCQl9CgkJfQoJfQoJCglyZXR1cm4gbnVsbDsKfQoKcHJpdmF0ZSBz
dGF0aWMgU3RyaW5nW10gcmVhZEZpbGVBc1N0cmluZ0xpc3QoU3RyaW5nIGZuYW1lKSB0aHJvd3Mg
U2VydmljZUV4Y2VwdGlvbiB7CgkKCUlucHV0U3RyZWFtIGlzID0gbmV3IEJ5dGVBcnJheUlucHV0
U3RyZWFtKHJlYWRGaWxlKGZuYW1lKSk7CgkKCUxpc3Q8U3RyaW5nPiBsaW5lcyA9IG5ldyBBcnJh
eUxpc3Q8U3RyaW5nPigpOwoJU3RyaW5nIGxpbmUgPSBudWxsOwoJCgl0cnkgKEJ1ZmZlcmVkUmVh
ZGVyIHJkciA9IG5ldyBCdWZmZXJlZFJlYWRlcihuZXcgSW5wdXRTdHJlYW1SZWFkZXIoaXMpKTsp
IHsKCQl3aGlsZSAoKGxpbmU9cmRyLnJlYWRMaW5lKCkpICE9IG51bGwpIHsKCQkJbGluZXMuYWRk
KGxpbmUpOwoJCX0KCX0gY2F0Y2ggKElPRXhjZXB0aW9uIGUpIHsKCQl0aHJvdyBuZXcgU2Vydmlj
ZUV4Y2VwdGlvbihlKTsKCX0KCQkKCXJldHVybiBsaW5lcy50b0FycmF5KG5ldyBTdHJpbmdbbGlu
ZXMuc2l6ZSgpXSk7Cn0KCnByaXZhdGUgc3RhdGljIGJ5dGVbXSByZWFkRmlsZShTdHJpbmcgZm5h
bWUpIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsKCQoJaWYgKGZuYW1lID09IG51bGwpCgkJdGhy
b3cgbmV3IFNlcnZpY2VFeGNlcHRpb24oInByb3ZpZGUgZmlsZSBuYW1lIHBsZWFzZSIpOwoJCgkv
LyBwcm9jZXNzCgkKCWJ5dGVbXSBkYXRhID0gbnVsbDsKCQoJdHJ5IHsKCQlkYXRhID0gRmlsZXMu
cmVhZEFsbEJ5dGVzKFBhdGhzLmdldChmbmFtZSkpOwoJfSBjYXRjaChOb1N1Y2hGaWxlRXhjZXB0
aW9uIGUpIHsKCQkKCQl0aHJvdyBuZXcgU2VydmljZUV4Y2VwdGlvbihlKTsKCX0gY2F0Y2ggKElP
RXhjZXB0aW9uIGUpIHsKCQkKCQl0aHJvdyBuZXcgU2VydmljZUV4Y2VwdGlvbihlKTsKCX0KCQkJ
CglyZXR1cm4gZGF0YTsKfQoKcHVibGljIHN0YXRpYyB2b2lkIGRlY29tcHJlc3NHelRhcihGaWxl
IGluLCBGaWxlIG91dCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKCQoJdHJ5IChHemlwQ29tcHJlc3Nv
cklucHV0U3RyZWFtIGd6aXBJbiA9IG5ldyBHemlwQ29tcHJlc3NvcklucHV0U3RyZWFtKG5ldyBG
aWxlSW5wdXRTdHJlYW0oaW4pKSkgewoJCV9kZWNvbXByZXNzKGd6aXBJbiwgb3V0KTsKCX0KfQoK
cHVibGljIHN0YXRpYyB2b2lkIGRlY29tcHJlc3NUYXIoRmlsZSBpbiwgRmlsZSBvdXQpIHRocm93
cyBJT0V4Y2VwdGlvbiB7CgkKICAgIHRyeSAoVGFyQXJjaGl2ZUlucHV0U3RyZWFtIGZpbiA9IG5l
dyBUYXJBcmNoaXZlSW5wdXRTdHJlYW0obmV3IEZpbGVJbnB1dFN0cmVhbShpbikpKSB7CgkJX2Rl
Y29tcHJlc3MoZmluLCBvdXQpOwogICAgfQp9CgpwdWJsaWMgc3RhdGljIHZvaWQgX2RlY29tcHJl
c3MoSW5wdXRTdHJlYW0gaW4sIEZpbGUgb3V0KSB0aHJvd3MgSU9FeGNlcHRpb24gewoJCiAgICB0
cnkgKFRhckFyY2hpdmVJbnB1dFN0cmVhbSBmaW4gPSBuZXcgVGFyQXJjaGl2ZUlucHV0U3RyZWFt
KGluKSkgewogICAgCQkgICAgCQogICAgICAgIFRhckFyY2hpdmVFbnRyeSBlbnRyeTsKICAgICAg
ICB3aGlsZSAoKGVudHJ5ID0gZmluLmdldE5leHRUYXJFbnRyeSgpKSAhPSBudWxsKSB7CiAgICAg
ICAgCQkgICAgICAgIAkKICAgICAgICAgICAgaWYgKGVudHJ5LmlzRGlyZWN0b3J5KCkpIHsKICAg
ICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIEZpbGUgY3Vy
ZmlsZSA9IG5ldyBGaWxlKG91dCwgZW50cnkuZ2V0TmFtZSgpKTsKICAgICAgICAgICAgRmlsZSBw
YXJlbnQgPSBjdXJmaWxlLmdldFBhcmVudEZpbGUoKTsKICAgICAgICAgICAgaWYgKCFwYXJlbnQu
ZXhpc3RzKCkpIHsKICAgICAgICAgICAgICAgIHBhcmVudC5ta2RpcnMoKTsKICAgICAgICAgICAg
fQogICAgICAgICAgICBJT1V0aWxzLmNvcHkoZmluLCBuZXcgRmlsZU91dHB1dFN0cmVhbShjdXJm
aWxlKSk7CiAgICAgICAgfQogICAgfQp9CgpwdWJsaWMgc3RhdGljIGNsYXNzIE1pbWVDb250ZW50
UmVhZGVyIHsKCQoJcHVibGljIFN0cmluZyBsYXN0UmVhZEZpbGU7CglwdWJsaWMgU3RyaW5nIGZp
bGVOYW1lOwoJcHVibGljIFN0cmluZyBjb250ZW50VHlwZTsKCQoJcHJpdmF0ZSBTdHJpbmcgX2V4
dDsKCXByaXZhdGUgU3RyaW5nIF9wYXRoOwoJcHJpdmF0ZSBTdHJpbmcgX3ByZWZpeDsKCXByaXZh
dGUgU3RyaW5nIF9tYXJrZXI7CgkKCXB1YmxpYyBNaW1lQ29udGVudFJlYWRlcihTdHJpbmcgcGF0
aCwgU3RyaW5nIGZpbGVuYW1lUHJlZml4LCBJbnB1dFN0cmVhbSBpbiwgU3RyaW5nIGV4dCkgdGhy
b3dzIFNlcnZpY2VFeGNlcHRpb24gewoJCQoJCXRoaXMuX2V4dCA9IGV4dDsKCQl0aGlzLl9wYXRo
ID0gcGF0aDsKCQl0aGlzLl9wcmVmaXggPSBmaWxlbmFtZVByZWZpeDsKCQkKCQlPdXRwdXRTdHJl
YW0gb3V0ID0gbnVsbDsKCQlieXRlW10gYnVmZmVyID0gbmV3IGJ5dGVbOCAqIDEwMjRdOwoJICAg
IGludCBieXRlc1JlYWQgPSAtMTsKCSAgICAJCSAgICAKCSAgICB0cnkgewoJCQl3aGlsZSAoKGJ5
dGVzUmVhZD1pbi5yZWFkKGJ1ZmZlcikpICE9IC0xKSB7CgkJCQkKCQkJCW91dCA9IHJlYWRNaW1l
RGF0YUZyb21CdWZmZXIoYnVmZmVyLCBieXRlc1JlYWQsIG91dCk7CgkJCX0KCSAgICB9IGNhdGNo
IChJT0V4Y2VwdGlvbiBlKSB7CgkJCXRocm93IG5ldyBTZXJ2aWNlRXhjZXB0aW9uKGUpOwoJICAg
IH0gZmluYWxseSB7CgkJCQoJICAgIAlpZiAob3V0ICE9IG51bGwpIHsKCSAgICAJCXRyeSB7CgkJ
CQkJb3V0LmNsb3NlKCk7CgkJCQl9IGNhdGNoIChJT0V4Y2VwdGlvbiBlKSB7CgkJCQkJdGhyb3cg
bmV3IFNlcnZpY2VFeGNlcHRpb24oZSk7CgkJCQl9CgkgICAgCX0KCQl9Cgl9CgkKCXB1YmxpYyBT
dHJpbmcgbGFzdFJlYWRGaWxlKCkgewoJCQoJCWlmIChsYXN0UmVhZEZpbGUgIT0gbnVsbCkgewoJ
CQlyZXR1cm4gbGFzdFJlYWRGaWxlOwoJCX0gZWxzZSB7CgkJCXJldHVybiBmaWxlTmFtZTsKCQl9
Cgl9CgkKCXB1YmxpYyBPdXRwdXRTdHJlYW0gcmVhZE1pbWVEYXRhRnJvbUJ1ZmZlcihieXRlW10g
YnVmZmVyLCBpbnQgYnl0ZXNSZWFkLCBPdXRwdXRTdHJlYW0gb3V0KSB0aHJvd3MgSU9FeGNlcHRp
b24gewoJCQkJCgkgICAgU3lzdGVtLm91dC5wcmludGxuKCJwcm9jZXNzaW5nIGJ1ZmZlciBvZiAi
ICsgYnl0ZXNSZWFkICsgIiAvICIgKyBvdXQpOwoJICAgIAoJCWludCBpbmRleEluID0gMDsKCQkK
CSAgICBpZiAodGhpcy5maWxlTmFtZSA9PSBudWxsKSB7CgkgICAgCQoJCQlib29sZWFuIGdvID0g
ZmFsc2U7CgkJCVN0cmluZyBsaW5lID0gbnVsbDsKCQkJCSAgICAKCQkJQnVmZmVyZWRSZWFkZXIg
cmVhZGVyID0gbmV3IEJ1ZmZlcmVkUmVhZGVyKG5ldyBJbnB1dFN0cmVhbVJlYWRlcihuZXcgQnl0
ZUFycmF5SW5wdXRTdHJlYW0oYnVmZmVyKSkpOwoKCQkJd2hpbGUoIWdvICYmIChsaW5lPXJlYWRl
ci5yZWFkTGluZSgpKSAhPSBudWxsKSB7CgkJCQkJCQkJCQkKCQkJCWluZGV4SW4gKz0gbGluZS5n
ZXRCeXRlcygpLmxlbmd0aCArIDI7CgkJCQkKCQkJCS8vU3lzdGVtLm91dC5wcmludGxuKCJwcm9j
ZXNzaW5nIGxpbmU6ICIgKyBsaW5lKTsKCQkJCQoJCQkJaWYgKF9tYXJrZXIgIT0gbnVsbCAmJiBs
aW5lLmxlbmd0aCgpID09IDApIHsKCQkJCQkvLyBoaXQgYm9keQoJCQkJCWdvID0gdHJ1ZTsKCQkJ
CQkKCQkJCQkvL2luZGV4SW4gKz0gMTsKCQkJCQkJCQkJCQkKCQkJCX0gZWxzZSBpZiAodGhpcy5m
aWxlTmFtZSA9PSBudWxsICYmIGxpbmUuc3RhcnRzV2l0aCgiQ29udGVudC1EaXNwb3NpdGlvbiIp
KSB7CgkJCQkJLy8gcmVhZCBmaWxlIG5hbWUKCQkJCQkKCQkJCQlTeXN0ZW0ub3V0LnByaW50bG4o
Im1hcmtlciBpcyAiICsgX21hcmtlcik7CgkJCQkJCQkJCQkJCgkJCQkJaWYgKGxpbmUuaW5kZXhP
ZigiZmlsZW5hbWU9IikgIT0gLTEpCgkJCQkJCXRoaXMuZmlsZU5hbWUgPSBsaW5lLnN1YnN0cmlu
ZyhsaW5lLmluZGV4T2YoImZpbGVuYW1lPSIpKzEwKTsKCQkJCQllbHNlCgkJCQkJCXRoaXMuZmls
ZU5hbWUgPSBsaW5lLnN1YnN0cmluZyhsaW5lLmluZGV4T2YoIm5hbWU9IikrNik7CgoJCQkJCXRo
aXMuZmlsZU5hbWUgPSB0aGlzLmZpbGVOYW1lLnN1YnN0cmluZygwLCB0aGlzLmZpbGVOYW1lLmlu
ZGV4T2YoIlwiIikpOwoJCQkJCQoJCQkJCWlmICh0aGlzLl9wcmVmaXggIT0gbnVsbCkgewoJCQkJ
CQl0aGlzLmZpbGVOYW1lID0gdGhpcy5fcHJlZml4ICsgIi0iICsgdGhpcy5maWxlTmFtZTsKCQkJ
CQl9CgkJCQkJCQkJCQkJCgkJCQkJU3lzdGVtLm91dC5wcmludGxuKCJOZXh0IGZpbGUgaXMgIiAr
IHRoaXMuZmlsZU5hbWUpOwoJCQkJfQoJCQkJCgkJCQlpZiAoX21hcmtlciA9PSBudWxsICYmIGxp
bmUuc3RhcnRzV2l0aCgiLS0iKSkKCQkJCQlfbWFya2VyID0gbGluZTsKCQkJCQoJCQl9IC8vIGVu
ZCB3aGlsZQkJCgkgICAgfQoJICAgIAoJICAgIC8vIHByb2Nlc3MgYm9keQoJIAoJIC8vIHNocmlu
ayBidWZmZXIgdG8gYWN0dWFsIGRhdGEgcmVhZCAoaGFwcGVucyB3aGVuIHdlIGdldCB0byB0aGUg
ZW5kIG9mIGZpbGUpCgkJCgkJCgkJYnl0ZVtdIG5ld0J1ZiA9IG51bGw7CgkJCgkJaWYgKGluZGV4
SW4gPiAwIHx8IGJ5dGVzUmVhZCA8IGJ1ZmZlci5sZW5ndGgpIHsKCQkJbmV3QnVmID0gbmV3IGJ5
dGVbYnl0ZXNSZWFkLWluZGV4SW5dOwoJCQlpbnQgeiA9IDA7CgkJICAgIGZvciAoaW50IGkgPSBp
bmRleEluOyBpIDwgYnl0ZXNSZWFkOyBpKyspIHsKCQkgICAgCW5ld0J1Zlt6KytdID0gYnVmZmVy
W2ldOwoJCSAgICB9CgkJICAgIAoJCSAgICBTeXN0ZW0ub3V0LnByaW50bG4oInNocmluayBidWYg
dG8gIiArIG5ld0J1Zi5sZW5ndGgpOwoJCSAgICAKCQkgICAgYnVmZmVyID0gbmV3QnVmOwoJCX0J
CgkJCgkgICAgYnl0ZVtdIG1hcmtlckJ5dGVzID0gX21hcmtlci5nZXRCeXRlcygpOwoKCSAgICAv
LyBub3cgYXQgY29udGVudCBzdGFydCwgYnV0IGhhdmUgd2UgcmVhY2hlZCBzdGFydCBvZiBuZXh0
IGF0dGFjaG1lbnQgdG9vIQoJICAgIAoJICAgIGJ5dGVbXSBsYXN0RmlsZUJ1ZiA9IG51bGw7Cgkg
ICAgaW50IGluZGV4T3V0ID0gLTE7CgkgICAgCgkgICAgaWYgKGJ1ZmZlciAhPSBudWxsICYmIG5l
dyBTdHJpbmcoYnVmZmVyKS5jb250YWlucyhfbWFya2VyKSkgewogICAgCQkKICAgIAkJLy8gcmVh
Y2hlZCBlbmQgbWFya2VyCiAgICAJCQkJCQkgICAgCQogICAgCQlpbmRleE91dCA9IGluZGV4T2Yo
YnVmZmVyLCBtYXJrZXJCeXRlcykgLSAyOwogICAgCQkJCSAgICAJCQogICAgCQlTeXN0ZW0ub3V0
LnByaW50bG4oImVuZCBtYXJrZXIgZm9yIGZpbGUgaXMgYXQgIiArIGluZGV4T3V0ICsgIiBvZiAi
ICsgYnVmZmVyLmxlbmd0aCk7CiAgICAJCQogICAgCQlpZiAoaW5kZXhPdXQgPiAwKSB7CiAgICAJ
CQlsYXN0RmlsZUJ1ZiA9IG5ldyBieXRlW2luZGV4T3V0XTsKICAgIAkJCWludCB6ID0gMDsKICAg
IAkJCWZvciAoaW50IGkgPSAwOyBpIDwgaW5kZXhPdXQ7IGkrKykgewogICAgCQkJCWxhc3RGaWxl
QnVmW3orK10gPSBidWZmZXJbaV07CiAgICAJCQl9CiAgICAJCX0KICAgIAkJCiAgICAJCWludCBl
bmQgPSBpbmRleE91dCttYXJrZXJCeXRlcy5sZW5ndGgrNjsKICAgIAkJaW50IHNpemUgPSBidWZm
ZXIubGVuZ3RoLWVuZDsKICAgIAkJCgkgICAgCVN5c3RlbS5vdXQucHJpbnRsbigicmVtYWluZGVy
IGlzICIgKyBlbmQpOwoKCQkgICAgLy8gcHJlcGFyZSBmb3IgbmV4dCBhdHRhY2htZW50IGlmIChh
bnkpCgkJICAgIAoJCSAgICBpZiAoc2l6ZSA+IDApIHsKCQkgICAgCQkJCSAgICAJCgkJICAgIAli
eXRlW10gbmV4dEZpbGVCdWYgPSBuZXcgYnl0ZVtzaXplXTsKCQkgICAgCWludCB6ID0gMDsKCQkg
ICAgCWZvciAoaW50IGkgPSBlbmQ7IGkgPCBidWZmZXIubGVuZ3RoOyBpKyspIHsKCQkgICAgCQlu
ZXh0RmlsZUJ1Zlt6KytdID0gYnVmZmVyW2ldOwoJCSAgICAJfQoJCSAgICAKCQkgICAgCWJ1ZmZl
ciA9IG5leHRGaWxlQnVmOwoJCSAgICAJCgkJICAgIH0gZWxzZSB7CgkJICAgIAlidWZmZXIgPSBu
dWxsOwoJCSAgICB9CQkJICAgIAogICAgCX0KCSAgICAJCSAgICAKCSAgICBpZiAob3V0ID09IG51
bGwgfHwgbGFzdEZpbGVCdWYgIT0gbnVsbCkgewoJCQkJICAgIAkKCSAgICAJLy8gY3VycmVudCBm
aWxlIG5vdCB5ZXQgc3RhcnRlZCwgb3BlbiBpdAoJICAgIAkKCSAgICAJaWYgKG91dCA9PSBudWxs
KSB7CgkJICAgIAkJCQkJCQoJICAgIAkJaWYgKF9leHQgIT0gbnVsbCAmJiAhdGhpcy5maWxlTmFt
ZS5lbmRzV2l0aChfZXh0KSkgewoJCQkJCWlmIChfZXh0LnN0YXJ0c1dpdGgoIi4iKSkKCQkJCQkJ
dGhpcy5maWxlTmFtZSArPSBfZXh0OwoJCQkJCWVsc2UKCQkJCQkJdGhpcy5maWxlTmFtZSArPSAi
LiIgKyBfZXh0OwoJCQkJfQoJCQkJCQkJCQkJCQkKCQkJCW91dCA9IG5ldyBGaWxlT3V0cHV0U3Ry
ZWFtKG5ldyBGaWxlKF9wYXRoLCB0aGlzLmZpbGVOYW1lKSk7CgkgICAgCX0gCgkgICAgCQoJICAg
IAlpZiAobGFzdEZpbGVCdWYgIT0gbnVsbCkgewoJCQkKCQkgICAgCS8vIHJlYWNoZWQgZW5kIG9m
IGN1cnJlbnQgZmlsZSwgd3JpdGUgZW5kIG9mIGZpbGUKCgkJCQlTeXN0ZW0ub3V0LnByaW50bG4o
ImZpbmlzaGluZyBjdXJyZW50IGZpbGUiKTsKCQkJCQoJCQkJb3V0LndyaXRlKGxhc3RGaWxlQnVm
KTsKCQkJCW91dC5jbG9zZSgpOwoJCQkJdGhpcy5sYXN0UmVhZEZpbGUgPSB0aGlzLmZpbGVOYW1l
OwoJCQkJdGhpcy5maWxlTmFtZSA9IG51bGw7CgkJCQlvdXQgPSBudWxsOwoJCQkJCgkJCQkvLyBz
dGFydCBuZXh0IGZpbGUgCgkJCQkJCQkKCQkJCWlmIChidWZmZXIgIT0gbnVsbCkKCQkJCQlvdXQg
PSB0aGlzLnJlYWRNaW1lRGF0YUZyb21CdWZmZXIoYnVmZmVyLCBidWZmZXIubGVuZ3RoLCBvdXQp
OwoJCQkJCgkJCQlTeXN0ZW0ub3V0LnByaW50bG4oIj4+Pj4+PiBiYWNraW5nIG91dCBvZiBjdXJy
ZW50IHJlbWFpbmRlciIpOwoJCQkJCgkJCX0gZWxzZSB7CgkJCQkvLyBlbmQgb2YgZmlsZSBpcyBv
dXRzaWRlIG9mIGJ1ZmZlciwgc28ganVzdCB3cml0ZSBidWYKCQkJCQoJCQkJU3lzdGVtLm91dC5w
cmludGxuKCJ3cml0aW5nIGN1cnJlbnQgYnVmZmVyIHRvIG5ldyBmaWxlICIgKyB0aGlzLmZpbGVO
YW1lICsgIiAvICIgKyBvdXQpOwoJCQkJCgkJCQlvdXQud3JpdGUoYnVmZmVyKTsKCQkJfQoJCQkK
CQl9IGVsc2UgaWYgKGJ1ZmZlciAhPSBudWxsKSB7CgkJCQoJCQkvLyByaWdodCBpbiB0aGUgbWlk
ZGxlLCBzbyB3cml0ZSBidWZmZXIgdG8gZXhpc3Rpbmcgb3V0cHV0CgkJCQoJCQlTeXN0ZW0ub3V0
LnByaW50bG4oIndyaXRpbmcgY3VycmVudCBidWZmZXIgdG8gIiArIHRoaXMuZmlsZU5hbWUpOwoJ
CQkKCQkJb3V0LndyaXRlKGJ1ZmZlcik7CgkJfQoJICAgIAoJICAgIHJldHVybiBvdXQ7Cgl9CQkK
fQoKcHVibGljIHN0YXRpYyBpbnQgaW5kZXhPZihieXRlW10gZGF0YSwgYnl0ZVtdIHBhdHRlcm4p
IHsKCSAgIAoJaW50W10gZmFpbHVyZSA9IGNvbXB1dGVGYWlsdXJlKHBhdHRlcm4pOwoKICAgIGlu
dCBqID0gMDsKCiAgICBmb3IgKGludCBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHsKICAg
ICAgICB3aGlsZSAoaiA+IDAgJiYgcGF0dGVybltqXSAhPSBkYXRhW2ldKSB7CiAgICAgICAgICAg
IGogPSBmYWlsdXJlW2ogLSAxXTsKICAgICAgICB9CiAgICAgICAgaWYgKHBhdHRlcm5bal0gPT0g
ZGF0YVtpXSkgeyAKICAgICAgICAgICAgaisrOyAKICAgICAgICB9CiAgICAgICAgaWYgKGogPT0g
cGF0dGVybi5sZW5ndGgpIHsKICAgICAgICAgICAgcmV0dXJuIGkgLSBwYXR0ZXJuLmxlbmd0aCAr
IDE7CiAgICAgICAgfQogICAgfQogICAgcmV0dXJuIC0xOwp9Cgpwcml2YXRlIHN0YXRpYyBpbnRb
XSBjb21wdXRlRmFpbHVyZShieXRlW10gcGF0dGVybikgewogICAKCWludFtdIGZhaWx1cmUgPSBu
ZXcgaW50W3BhdHRlcm4ubGVuZ3RoXTsKCiAgICBpbnQgaiA9IDA7CiAgICBmb3IgKGludCBpID0g
MTsgaSA8IHBhdHRlcm4ubGVuZ3RoOyBpKyspIHsKICAgICAgICB3aGlsZSAoaj4wICYmIHBhdHRl
cm5bal0gIT0gcGF0dGVybltpXSkgewogICAgICAgICAgICBqID0gZmFpbHVyZVtqIC0gMV07CiAg
ICAgICAgfQogICAgICAgIGlmIChwYXR0ZXJuW2pdID09IHBhdHRlcm5baV0pIHsKICAgICAgICAg
ICAgaisrOwogICAgICAgIH0KICAgICAgICBmYWlsdXJlW2ldID0gajsKICAgIH0KCiAgICByZXR1
cm4gZmFpbHVyZTsKfQoKcHVibGljIHN0YXRpYyBTdHJpbmcgdG9IZXgoYnl0ZVtdIGJ5dGVzKSB7
CglCaWdJbnRlZ2VyIGJpID0gbmV3IEJpZ0ludGVnZXIoMSwgYnl0ZXMpOwoJcmV0dXJuIFN0cmlu
Zy5mb3JtYXQoIiUwIiArIChieXRlcy5sZW5ndGggPDwgMSkgKyAiWCIsIGJpKTsKfQoKcHJpdmF0
ZSBzdGF0aWMgSURhdGEgbWFrZVZhbHVlc0ludG9JRGF0YShWYWx1ZXMgdikgewoJCglJRGF0YSBv
dXQgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7CglJRGF0YUN1cnNvciBjID0gb3V0LmdldEN1cnNv
cigpOwoJCglFbnVtZXJhdGlvbjxTdHJpbmc+IGUgPSB2LmtleXMoKTsKCQoJd2hpbGUgKGUuaGFz
TW9yZUVsZW1lbnRzKCkpIHsKCQlTdHJpbmcga2V5ID0gZS5uZXh0RWxlbWVudCgpOwoJCU9iamVj
dCAgdmFsdWUgPSB2LmdldChrZXkpOwoJCQoJCUlEYXRhVXRpbC5wdXQoYywga2V5LCB2YWx1ZSk7
Cgl9CgkKCWMuZGVzdHJveSgpOwoJcmV0dXJuIG91dDsKfQoKcHJpdmF0ZSBzdGF0aWMgY2xhc3Mg
RGlyQ29waWVyIGV4dGVuZHMgU2ltcGxlRmlsZVZpc2l0b3I8UGF0aD4gewoJCglwcml2YXRlIFBh
dGggX3NyYzsKCXByaXZhdGUgUGF0aCBfdGd0OwoJCglEaXJDb3BpZXIoUGF0aCBzcmMsIFBhdGgg
dGd0KSB7CgkJCgkJdGhpcy5fc3JjID0gc3JjOwoJCXRoaXMuX3RndCA9IHRndDsKCX0KCQoJcHVi
bGljIHZvaWQgY29weShib29sZWFuIG92ZXJ3cml0ZSkgdGhyb3dzIElPRXhjZXB0aW9uLCBTZXJ2
aWNlRXhjZXB0aW9uIHsKCQkKCQlpZiAodGhpcy5fdGd0LnRvRmlsZSgpLmV4aXN0cygpICYmIG92
ZXJ3cml0ZSkKCQkJdGhpcy5fdGd0LnRvRmlsZSgpLmRlbGV0ZSgpOwoJCWVsc2UgaWYgKHRoaXMu
X3RndC50b0ZpbGUoKS5leGlzdHMoKSkKCQkJdGhyb3cgbmV3IFNlcnZpY2VFeGNlcHRpb24oIlRh
cmdldCBkaXJlY3RvcnkgYWxyZWFkeSBleGlzdHMgYW5kIG92ZXJ3cml0ZSBub3Qgc3BlY2lmaWVk
ITogIiArIHRoaXMuX3RndC50b0ZpbGUoKS5nZXRDYW5vbmljYWxQYXRoKCkpOwoJCQoJCSBGaWxl
cy53YWxrRmlsZVRyZWUoX3NyYywgdGhpcyk7Cgl9CgkKCUBPdmVycmlkZQogICAgcHVibGljIEZp
bGVWaXNpdFJlc3VsdCB2aXNpdEZpbGUoUGF0aCBmaWxlLCBCYXNpY0ZpbGVBdHRyaWJ1dGVzIGF0
dHJpYnV0ZXMpIHsKIAogICAgICAgIHRyeSB7CiAgICAgICAgICAgIFBhdGggdGFyZ2V0RmlsZSA9
IF90Z3QucmVzb2x2ZShfc3JjLnJlbGF0aXZpemUoZmlsZSkpOwogICAgICAgICAgICBGaWxlcy5j
b3B5KGZpbGUsIHRhcmdldEZpbGUpOwogICAgICAgIH0gY2F0Y2ggKElPRXhjZXB0aW9uIGV4KSB7
CiAgICAgICAgICAgIFN5c3RlbS5lcnIucHJpbnRsbihleCk7CiAgICAgICAgfQogCiAgICAgICAg
cmV0dXJuIEZpbGVWaXNpdFJlc3VsdC5DT05USU5VRTsKICAgIH0KIAogICAgQE92ZXJyaWRlCiAg
ICBwdWJsaWMgRmlsZVZpc2l0UmVzdWx0IHByZVZpc2l0RGlyZWN0b3J5KFBhdGggZGlyLCBCYXNp
Y0ZpbGVBdHRyaWJ1dGVzIGF0dHJpYnV0ZXMpIHsKICAgICAgICB0cnkgewogICAgICAgICAgICBQ
YXRoIG5ld0RpciA9IF90Z3QucmVzb2x2ZShfc3JjLnJlbGF0aXZpemUoZGlyKSk7CiAgICAgICAg
ICAgIEZpbGVzLmNyZWF0ZURpcmVjdG9yeShuZXdEaXIpOwogICAgICAgIH0gY2F0Y2ggKElPRXhj
ZXB0aW9uIGV4KSB7CiAgICAgICAgICAgIFN5c3RlbS5lcnIucHJpbnRsbihleCk7CiAgICAgICAg
fQogCiAgICAgICAgcmV0dXJuIEZpbGVWaXNpdFJlc3VsdC5DT05USU5VRTsKICAgIH0KfQoKcHJp
dmF0ZSBzdGF0aWMgdm9pZCBkZWxldGVEaXIoRmlsZSBlbGVtZW50KSB0aHJvd3MgU2VydmljZUV4
Y2VwdGlvbiB7CiAgICBpZiAoZWxlbWVudC5pc0RpcmVjdG9yeSgpKSB7CiAgICAJaWYgKGVsZW1l
bnQubGlzdEZpbGVzKCkgIT0gbnVsbCkgewogICAgCQlmb3IgKEZpbGUgc3ViIDogZWxlbWVudC5s
aXN0RmlsZXMoKSkgewogICAgCQkJZGVsZXRlRGlyKHN1Yik7CiAgICAJCX0KICAgIAl9CiAgICB9
CiAgICAJCSAgICAKICAgIGlmICghZWxlbWVudC5kZWxldGUoKSkKICAgIAl0aHJvdyBuZXcgU2Vy
dmljZUV4Y2VwdGlvbigiQ2Fubm90IGRlbGV0ZSBmaWxlICciICsgZWxlbWVudC5nZXRBYnNvbHV0
ZVBhdGgoKSk7Cn0KCnByaXZhdGUgc3RhdGljIExpc3Q8U3RyaW5nPiBsaXN0ZihTdHJpbmcgZGly
LCBTdHJpbmcgZmlsdGVyKSB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7CgkKCUZpbGUgZGlyZWN0
b3J5ID0gbmV3IEZpbGUoZGlyKTsKCiAgICBMaXN0PFN0cmluZz4gcmVzdWx0TGlzdCA9IG5ldyBB
cnJheUxpc3Q8U3RyaW5nPigpOwoKICAgIC8vIGdldCBhbGwgdGhlIGZpbGVzIGZyb20gYSBkaXJl
Y3RvcnkKICAgIEZpbGVbXSBmTGlzdCA9IGRpcmVjdG9yeS5saXN0RmlsZXMoKTsKICAgIAogICAg
aWYgKGZMaXN0ICE9IG51bGwpIHsKICAgIAlmb3IgKEZpbGUgZmlsZSA6IGZMaXN0KSB7CiAgICAJ
CiAgICAJCWlmIChmaWxlLmlzRmlsZSgpICYmIChmaWx0ZXIgPT0gbnVsbCB8fCBmaWxlLmdldE5h
bWUoKS5tYXRjaGVzKGZpbHRlcikpKSB7CiAgICAJCQlyZXN1bHRMaXN0LmFkZChmaWxlLmdldEFi
c29sdXRlUGF0aCgpKTsKICAgIAkKICAgIAkJfSBlbHNlIGlmIChmaWxlLmlzRGlyZWN0b3J5KCkp
IHsKICAgIAkJCXJlc3VsdExpc3QuYWRkQWxsKGxpc3RmKGZpbGUuZ2V0QWJzb2x1dGVQYXRoKCks
IGZpbHRlcikpOwogICAgCQl9CiAgICAJfQogICAgCiAgICAJcmV0dXJuIHJlc3VsdExpc3Q7CiAg
ICB9IGVsc2UgewogICAgCS8vdGhyb3cgbmV3IFNlcnZpY2VFeGNlcHRpb24oIk5vIGZpbGVzIGZv
dW5kIGZvcjogIiArIGRpcik7CiAgICAJCiAgICAJcmV0dXJuIG51bGw7CiAgICB9Cn0KCnByaXZh
dGUgc3RhdGljIGNsYXNzIFppcHBlciB7CgkKCXByaXZhdGUgU3RyaW5nIF9zb3VyY2VGb2xkZXI7
CgkKCXByaXZhdGUgTGlzdCA8U3RyaW5nPiBmaWxlTGlzdCA9IG5ldyBBcnJheUxpc3Q8U3RyaW5n
PigpOwoJCglwdWJsaWMgdm9pZCB6aXBJdChTdHJpbmcgc291cmNlRm9sZGVyLCBTdHJpbmcgemlw
RmlsZSkgewoJCQoJCXRoaXMuX3NvdXJjZUZvbGRlciA9IHNvdXJjZUZvbGRlcjsKCQoJCXRoaXMu
Z2VuZXJhdGVGaWxlTGlzdChuZXcgRmlsZShzb3VyY2VGb2xkZXIpKTsKCQkJCgkgICAgYnl0ZVtd
IGJ1ZmZlciA9IG5ldyBieXRlWzEwMjRdOwoJICAgIFN0cmluZyBzb3VyY2UgPSBuZXcgRmlsZShz
b3VyY2VGb2xkZXIpLmdldE5hbWUoKTsKCSAgICBGaWxlT3V0cHV0U3RyZWFtIGZvcyA9IG51bGw7
CgkgICAgWmlwT3V0cHV0U3RyZWFtIHpvcyA9IG51bGw7CgkgICAgdHJ5IHsKCSAgICAgICAgZm9z
ID0gbmV3IEZpbGVPdXRwdXRTdHJlYW0oemlwRmlsZSk7CgkgICAgICAgIHpvcyA9IG5ldyBaaXBP
dXRwdXRTdHJlYW0oZm9zKTsKCQoJICAgICAgICBGaWxlSW5wdXRTdHJlYW0gaW4gPSBudWxsOwoJ
CgkgICAgICAgIGZvciAoU3RyaW5nIGZpbGU6IHRoaXMuZmlsZUxpc3QpIHsKCSAgICAgICAgICAg
IFppcEVudHJ5IHplID0gbmV3IFppcEVudHJ5KHNvdXJjZSArIEZpbGUuc2VwYXJhdG9yICsgZmls
ZSk7CgkgICAgICAgICAgICB6b3MucHV0TmV4dEVudHJ5KHplKTsKCSAgICAgICAgICAgIHRyeSB7
CgkgICAgICAgICAgICAgICAgaW4gPSBuZXcgRmlsZUlucHV0U3RyZWFtKHRoaXMuX3NvdXJjZUZv
bGRlciArIEZpbGUuc2VwYXJhdG9yICsgZmlsZSk7CgkgICAgICAgICAgICAgICAgaW50IGxlbjsK
CSAgICAgICAgICAgICAgICB3aGlsZSAoKGxlbiA9IGluIC5yZWFkKGJ1ZmZlcikpID4gMCkgewoJ
ICAgICAgICAgICAgICAgICAgICB6b3Mud3JpdGUoYnVmZmVyLCAwLCBsZW4pOwoJICAgICAgICAg
ICAgICAgIH0KCSAgICAgICAgICAgIH0gZmluYWxseSB7CgkgICAgICAgICAgICAgICAgaW4uY2xv
c2UoKTsKCSAgICAgICAgICAgIH0KCSAgICAgICAgfQoJCgkgICAgICAgIHpvcy5jbG9zZUVudHJ5
KCk7CgkgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbigiRm9sZGVyIHN1Y2Nlc3NmdWxseSBjb21w
cmVzc2VkIik7CgkKCSAgICB9IGNhdGNoIChJT0V4Y2VwdGlvbiBleCkgewoJICAgICAgICBleC5w
cmludFN0YWNrVHJhY2UoKTsKCSAgICB9IGZpbmFsbHkgewoJICAgICAgICB0cnkgewoJICAgICAg
ICAgICAgem9zLmNsb3NlKCk7CgkgICAgICAgIH0gY2F0Y2ggKElPRXhjZXB0aW9uIGUpIHsKCSAg
ICAgICAgICAgIGUucHJpbnRTdGFja1RyYWNlKCk7CgkgICAgICAgIH0KCSAgICB9Cgl9CgkKCXB1
YmxpYyB2b2lkIGdlbmVyYXRlRmlsZUxpc3QoRmlsZSBub2RlKSB7CgkgICAgLy8gYWRkIGZpbGUg
b25seQoJICAgIGlmIChub2RlLmlzRmlsZSgpKSB7CgkgICAgICAgIGZpbGVMaXN0LmFkZChnZW5l
cmF0ZVppcEVudHJ5KG5vZGUudG9TdHJpbmcoKSkpOwoJICAgIH0KCQoJICAgIGlmIChub2RlLmlz
RGlyZWN0b3J5KCkpIHsKCSAgICAgICAgU3RyaW5nW10gc3ViTm90ZSA9IG5vZGUubGlzdCgpOwoJ
ICAgICAgICBmb3IgKFN0cmluZyBmaWxlbmFtZTogc3ViTm90ZSkgewoJICAgICAgICAgICAgZ2Vu
ZXJhdGVGaWxlTGlzdChuZXcgRmlsZShub2RlLCBmaWxlbmFtZSkpOwoJICAgICAgICB9CgkgICAg
fQoJfQoJCglwcml2YXRlIFN0cmluZyBnZW5lcmF0ZVppcEVudHJ5KFN0cmluZyBmaWxlKSB7CgkJ
CQkKCSAgICByZXR1cm4gZmlsZS5zdWJzdHJpbmcoX3NvdXJjZUZvbGRlci5sZW5ndGgoKSArIDEs
IGZpbGUubGVuZ3RoKCkpOwoJfQp9CgpwdWJsaWMgc3RhdGljIGNsYXNzIFVuemlwRmlsZXMgewoJ
CiAgICBwcml2YXRlIHN0YXRpYyB2b2lkIHVuemlwKFN0cmluZyB6aXBGaWxlUGF0aCwgU3RyaW5n
IGRlc3REaXIpIHsKICAgICAgICBGaWxlIGRpciA9IG5ldyBGaWxlKGRlc3REaXIpOwogICAgICAg
IC8vIGNyZWF0ZSBvdXRwdXQgZGlyZWN0b3J5IGlmIGl0IGRvZXNuJ3QgZXhpc3QKICAgICAgICBp
ZighZGlyLmV4aXN0cygpKSBkaXIubWtkaXJzKCk7CiAgICAgICAgRmlsZUlucHV0U3RyZWFtIGZp
czsKICAgICAgICAvL2J1ZmZlciBmb3IgcmVhZCBhbmQgd3JpdGUgZGF0YSB0byBmaWxlCiAgICAg
ICAgYnl0ZVtdIGJ1ZmZlciA9IG5ldyBieXRlWzEwMjRdOwogICAgICAgIHRyeSB7CiAgICAgICAg
ICAgIGZpcyA9IG5ldyBGaWxlSW5wdXRTdHJlYW0oemlwRmlsZVBhdGgpOwogICAgICAgICAgICBa
aXBJbnB1dFN0cmVhbSB6aXMgPSBuZXcgWmlwSW5wdXRTdHJlYW0oZmlzKTsKICAgICAgICAgICAg
WmlwRW50cnkgemUgPSB6aXMuZ2V0TmV4dEVudHJ5KCk7CiAgICAgICAgICAgIHdoaWxlKHplICE9
IG51bGwpewogICAgICAgICAgICAgICAgU3RyaW5nIGZpbGVOYW1lID0gemUuZ2V0TmFtZSgpOwog
ICAgICAgICAgICAgICAgRmlsZSBuZXdGaWxlID0gbmV3IEZpbGUoZGVzdERpciArIEZpbGUuc2Vw
YXJhdG9yICsgZmlsZU5hbWUpOwogICAgICAgICAgICAgICAgLy9jcmVhdGUgZGlyZWN0b3JpZXMg
Zm9yIHN1YiBkaXJlY3RvcmllcyBpbiB6aXAKICAgICAgICAgICAgICAgIG5ldyBGaWxlKG5ld0Zp
bGUuZ2V0UGFyZW50KCkpLm1rZGlycygpOwogICAgICAgICAgICAgICAgRmlsZU91dHB1dFN0cmVh
bSBmb3MgPSBuZXcgRmlsZU91dHB1dFN0cmVhbShuZXdGaWxlKTsKICAgICAgICAgICAgICAgIGlu
dCBsZW47CiAgICAgICAgICAgICAgICB3aGlsZSAoKGxlbiA9IHppcy5yZWFkKGJ1ZmZlcikpID4g
MCkgewogICAgICAgICAgICAgICAgZm9zLndyaXRlKGJ1ZmZlciwgMCwgbGVuKTsKICAgICAgICAg
ICAgICAgIH0KICAgICAgICAgICAgICAgIGZvcy5jbG9zZSgpOwogICAgICAgICAgICAgICAgLy9j
bG9zZSB0aGlzIFppcEVudHJ5CiAgICAgICAgICAgICAgICB6aXMuY2xvc2VFbnRyeSgpOwogICAg
ICAgICAgICAgICAgemUgPSB6aXMuZ2V0TmV4dEVudHJ5KCk7CiAgICAgICAgICAgIH0KICAgICAg
ICAgICAgLy9jbG9zZSBsYXN0IFppcEVudHJ5CiAgICAgICAgICAgIHppcy5jbG9zZUVudHJ5KCk7
CiAgICAgICAgICAgIHppcy5jbG9zZSgpOwogICAgICAgICAgICBmaXMuY2xvc2UoKTsKICAgICAg
ICB9IGNhdGNoIChJT0V4Y2VwdGlvbiBlKSB7CiAgICAgICAgICAgIGUucHJpbnRTdGFja1RyYWNl
KCk7CiAgICAgICAgfQogICAgICAgIAogICAgfQp9Cgk=</value>
  <value name="encodeutf8">true</value>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
  <array name="imports" type="value" depth="1">
    <value>com.wm.app.b2b.server.ServerAPI</value>
    <value>com.ibm.icu.text.SimpleDateFormat</value>
    <value>com.wm.util.coder.JSONCoder</value>
    <value>java.io.BufferedOutputStream</value>
    <value>java.io.BufferedReader</value>
    <value>java.io.ByteArrayInputStream</value>
    <value>java.io.File</value>
    <value>java.io.FileInputStream</value>
    <value>java.io.FileOutputStream</value>
    <value>java.io.FilenameFilter</value>
    <value>java.io.IOException</value>
    <value>java.io.InputStream</value>
    <value>java.io.InputStreamReader</value>
    <value>java.io.OutputStream</value>
    <value>java.math.BigInteger</value>
    <value>java.nio.file.CopyOption</value>
    <value>java.nio.file.FileAlreadyExistsException</value>
    <value>java.nio.file.FileSystems</value>
    <value>java.nio.file.FileVisitResult</value>
    <value>java.nio.file.Files</value>
    <value>java.nio.file.NoSuchFileException</value>
    <value>java.nio.file.Path</value>
    <value>java.nio.file.Paths</value>
    <value>java.nio.file.SimpleFileVisitor</value>
    <value>java.nio.file.StandardCopyOption</value>
    <value>java.nio.file.attribute.BasicFileAttributes</value>
    <value>java.util.ArrayList</value>
    <value>java.util.Date</value>
    <value>java.util.Enumeration</value>
    <value>java.util.List</value>
    <value>java.util.zip.ZipEntry</value>
    <value>java.util.zip.ZipInputStream</value>
    <value>java.util.zip.ZipOutputStream</value>
    <value>org.apache.commons.compress.archivers.tar.TarArchiveEntry</value>
    <value>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</value>
    <value>org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream</value>
    <value>org.apache.commons.compress.utils.IOUtils</value>
  </array>
</Values>
