<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="shared">CQpwcml2YXRlIHN0YXRpYyBTdHJpbmdbXSByZWFkRmlsZUFzU3RyaW5nTGlzdChTdHJpbmcgZm5h
bWUpIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsKCQoJSW5wdXRTdHJlYW0gaXMgPSBuZXcgQnl0
ZUFycmF5SW5wdXRTdHJlYW0ocmVhZEZpbGUoZm5hbWUpKTsKCQoJTGlzdDxTdHJpbmc+IGxpbmVz
ID0gbmV3IEFycmF5TGlzdDxTdHJpbmc+KCk7CglTdHJpbmcgbGluZSA9IG51bGw7CgkKCXRyeSAo
QnVmZmVyZWRSZWFkZXIgcmRyID0gbmV3IEJ1ZmZlcmVkUmVhZGVyKG5ldyBJbnB1dFN0cmVhbVJl
YWRlcihpcykpOykgewoJCXdoaWxlICgobGluZT1yZHIucmVhZExpbmUoKSkgIT0gbnVsbCkgewoJ
CQlsaW5lcy5hZGQobGluZSk7CgkJfQoJfSBjYXRjaCAoSU9FeGNlcHRpb24gZSkgewoJCXRocm93
IG5ldyBTZXJ2aWNlRXhjZXB0aW9uKGUpOwoJfQoJCQoJcmV0dXJuIGxpbmVzLnRvQXJyYXkobmV3
IFN0cmluZ1tsaW5lcy5zaXplKCldKTsKfQoKcHJpdmF0ZSBzdGF0aWMgYnl0ZVtdIHJlYWRGaWxl
KFN0cmluZyBmbmFtZSkgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewoJCglpZiAoZm5hbWUgPT0g
bnVsbCkKCQl0aHJvdyBuZXcgU2VydmljZUV4Y2VwdGlvbigicHJvdmlkZSBmaWxlIG5hbWUgcGxl
YXNlIik7CgkKCS8vIHByb2Nlc3MKCQoJYnl0ZVtdIGRhdGEgPSBudWxsOwoJCgl0cnkgewoJCWRh
dGEgPSBGaWxlcy5yZWFkQWxsQnl0ZXMoUGF0aHMuZ2V0KGZuYW1lKSk7Cgl9IGNhdGNoKE5vU3Vj
aEZpbGVFeGNlcHRpb24gZSkgewoJCQoJCXRocm93IG5ldyBTZXJ2aWNlRXhjZXB0aW9uKGUpOwoJ
fSBjYXRjaCAoSU9FeGNlcHRpb24gZSkgewoJCQoJCXRocm93IG5ldyBTZXJ2aWNlRXhjZXB0aW9u
KGUpOwoJfQoJCQkKCXJldHVybiBkYXRhOwp9CgpwdWJsaWMgc3RhdGljIHZvaWQgZGVjb21wcmVz
c0d6VGFyKEZpbGUgaW4sIEZpbGUgb3V0KSB0aHJvd3MgSU9FeGNlcHRpb24gewoJCgl0cnkgKEd6
aXBDb21wcmVzc29ySW5wdXRTdHJlYW0gZ3ppcEluID0gbmV3IEd6aXBDb21wcmVzc29ySW5wdXRT
dHJlYW0obmV3IEZpbGVJbnB1dFN0cmVhbShpbikpKSB7CgkJX2RlY29tcHJlc3MoZ3ppcEluLCBv
dXQpOwoJfQp9CgpwdWJsaWMgc3RhdGljIHZvaWQgZGVjb21wcmVzc1RhcihGaWxlIGluLCBGaWxl
IG91dCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKCQogICAgdHJ5IChUYXJBcmNoaXZlSW5wdXRTdHJl
YW0gZmluID0gbmV3IFRhckFyY2hpdmVJbnB1dFN0cmVhbShuZXcgRmlsZUlucHV0U3RyZWFtKGlu
KSkpIHsKCQlfZGVjb21wcmVzcyhmaW4sIG91dCk7CiAgICB9Cn0KCnB1YmxpYyBzdGF0aWMgdm9p
ZCBfZGVjb21wcmVzcyhJbnB1dFN0cmVhbSBpbiwgRmlsZSBvdXQpIHRocm93cyBJT0V4Y2VwdGlv
biB7CgkKICAgIHRyeSAoVGFyQXJjaGl2ZUlucHV0U3RyZWFtIGZpbiA9IG5ldyBUYXJBcmNoaXZl
SW5wdXRTdHJlYW0oaW4pKSB7CiAgICAJCSAgICAJCiAgICAgICAgVGFyQXJjaGl2ZUVudHJ5IGVu
dHJ5OwogICAgICAgIHdoaWxlICgoZW50cnkgPSBmaW4uZ2V0TmV4dFRhckVudHJ5KCkpICE9IG51
bGwpIHsKICAgICAgICAJCSAgICAgICAgCQogICAgICAgICAgICBpZiAoZW50cnkuaXNEaXJlY3Rv
cnkoKSkgewogICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgIH0KICAgICAgICAg
ICAgRmlsZSBjdXJmaWxlID0gbmV3IEZpbGUob3V0LCBlbnRyeS5nZXROYW1lKCkpOwogICAgICAg
ICAgICBGaWxlIHBhcmVudCA9IGN1cmZpbGUuZ2V0UGFyZW50RmlsZSgpOwogICAgICAgICAgICBp
ZiAoIXBhcmVudC5leGlzdHMoKSkgewogICAgICAgICAgICAgICAgcGFyZW50Lm1rZGlycygpOwog
ICAgICAgICAgICB9CiAgICAgICAgICAgIElPVXRpbHMuY29weShmaW4sIG5ldyBGaWxlT3V0cHV0
U3RyZWFtKGN1cmZpbGUpKTsKICAgICAgICB9CiAgICB9Cn0KCnB1YmxpYyBzdGF0aWMgY2xhc3Mg
TWltZUNvbnRlbnRSZWFkZXIgewoJCglwdWJsaWMgU3RyaW5nIGxhc3RSZWFkRmlsZTsKCXB1Ymxp
YyBTdHJpbmcgZmlsZU5hbWU7CglwdWJsaWMgU3RyaW5nIGNvbnRlbnRUeXBlOwoJCglwcml2YXRl
IFN0cmluZyBfZXh0OwoJcHJpdmF0ZSBTdHJpbmcgX3BhdGg7Cglwcml2YXRlIFN0cmluZyBfbWFy
a2VyOwoJCglwdWJsaWMgTWltZUNvbnRlbnRSZWFkZXIoU3RyaW5nIHBhdGgsIElucHV0U3RyZWFt
IGluLCBTdHJpbmcgZXh0KSB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7CgkJCgkJdGhpcy5fZXh0
ID0gZXh0OwoJCXRoaXMuX3BhdGggPSBwYXRoOwoJCQoJCU91dHB1dFN0cmVhbSBvdXQgPSBudWxs
OwoJCWJ5dGVbXSBidWZmZXIgPSBuZXcgYnl0ZVs4ICogMTAyNF07CgkgICAgaW50IGJ5dGVzUmVh
ZCA9IC0xOwoJICAgIAkJICAgIAoJICAgIHRyeSB7CgkJCXdoaWxlICgoYnl0ZXNSZWFkPWluLnJl
YWQoYnVmZmVyKSkgIT0gLTEpIHsKCQkJCQoJCQkJb3V0ID0gcmVhZE1pbWVEYXRhRnJvbUJ1ZmZl
cihidWZmZXIsIGJ5dGVzUmVhZCwgb3V0KTsKCQkJfQoJICAgIH0gY2F0Y2ggKElPRXhjZXB0aW9u
IGUpIHsKCQkJdGhyb3cgbmV3IFNlcnZpY2VFeGNlcHRpb24oZSk7CgkgICAgfSBmaW5hbGx5IHsK
CQkJCgkgICAgCWlmIChvdXQgIT0gbnVsbCkgewoJICAgIAkJdHJ5IHsKCQkJCQlvdXQuY2xvc2Uo
KTsKCQkJCX0gY2F0Y2ggKElPRXhjZXB0aW9uIGUpIHsKCQkJCQl0aHJvdyBuZXcgU2VydmljZUV4
Y2VwdGlvbihlKTsKCQkJCX0KCSAgICAJfQoJCX0KCX0KCQoJcHVibGljIE91dHB1dFN0cmVhbSBy
ZWFkTWltZURhdGFGcm9tQnVmZmVyKGJ5dGVbXSBidWZmZXIsIGludCBieXRlc1JlYWQsIE91dHB1
dFN0cmVhbSBvdXQpIHRocm93cyBJT0V4Y2VwdGlvbiB7CgkJCQkKCSAgICBTeXN0ZW0ub3V0LnBy
aW50bG4oInByb2Nlc3NpbmcgYnVmZmVyIG9mICIgKyBieXRlc1JlYWQgKyAiIC8gIiArIG91dCk7
CgkgICAgCgkJaW50IGluZGV4SW4gPSAwOwoJCQoJICAgIGlmICh0aGlzLmZpbGVOYW1lID09IG51
bGwpIHsKCSAgICAJCgkJCWJvb2xlYW4gZ28gPSBmYWxzZTsKCQkJU3RyaW5nIGxpbmUgPSBudWxs
OwoJCQkJICAgIAoJCQlCdWZmZXJlZFJlYWRlciByZWFkZXIgPSBuZXcgQnVmZmVyZWRSZWFkZXIo
bmV3IElucHV0U3RyZWFtUmVhZGVyKG5ldyBCeXRlQXJyYXlJbnB1dFN0cmVhbShidWZmZXIpKSk7
CgoJCQl3aGlsZSghZ28gJiYgKGxpbmU9cmVhZGVyLnJlYWRMaW5lKCkpICE9IG51bGwpIHsKCQkJ
CQkJCQkJCQoJCQkJaW5kZXhJbiArPSBsaW5lLmdldEJ5dGVzKCkubGVuZ3RoICsgMjsKCQkJCQoJ
CQkJLy9TeXN0ZW0ub3V0LnByaW50bG4oInByb2Nlc3NpbmcgbGluZTogIiArIGxpbmUpOwoJCQkJ
CgkJCQlpZiAoX21hcmtlciAhPSBudWxsICYmIGxpbmUubGVuZ3RoKCkgPT0gMCkgewoJCQkJCS8v
IGhpdCBib2R5CgkJCQkJZ28gPSB0cnVlOwoJCQkJCQoJCQkJCS8vaW5kZXhJbiArPSAxOwoJCQkJ
CQkJCQkJCQoJCQkJfSBlbHNlIGlmICh0aGlzLmZpbGVOYW1lID09IG51bGwgJiYgbGluZS5zdGFy
dHNXaXRoKCJDb250ZW50LURpc3Bvc2l0aW9uIikpIHsKCQkJCQkvLyByZWFkIGZpbGUgbmFtZQoJ
CQkJCQoJCQkJCVN5c3RlbS5vdXQucHJpbnRsbigibWFya2VyIGlzICIgKyBfbWFya2VyKTsKCQkJ
CQkJCQkJCQkKCQkJCQlpZiAobGluZS5pbmRleE9mKCJmaWxlbmFtZT0iKSAhPSAtMSkKCQkJCQkJ
dGhpcy5maWxlTmFtZSA9IGxpbmUuc3Vic3RyaW5nKGxpbmUuaW5kZXhPZigiZmlsZW5hbWU9Iikr
MTApOwoJCQkJCWVsc2UKCQkJCQkJdGhpcy5maWxlTmFtZSA9IGxpbmUuc3Vic3RyaW5nKGxpbmUu
aW5kZXhPZigibmFtZT0iKSs2KTsKCgkJCQkJdGhpcy5maWxlTmFtZSA9IHRoaXMuZmlsZU5hbWUu
c3Vic3RyaW5nKDAsIHRoaXMuZmlsZU5hbWUuaW5kZXhPZigiXCIiKSk7CgkJCQkJCgkJCQkJU3lz
dGVtLm91dC5wcmludGxuKCJOZXh0IGZpbGUgaXMgIiArIHRoaXMuZmlsZU5hbWUpOwoJCQkJfQoJ
CQkJCgkJCQlpZiAoX21hcmtlciA9PSBudWxsICYmIGxpbmUuc3RhcnRzV2l0aCgiLS0iKSkKCQkJ
CQlfbWFya2VyID0gbGluZTsKCQkJCQoJCQl9IC8vIGVuZCB3aGlsZQkJCgkgICAgfQoJICAgIAoJ
ICAgIC8vIHByb2Nlc3MgYm9keQoJIAoJIC8vIHNocmluayBidWZmZXIgdG8gYWN0dWFsIGRhdGEg
cmVhZCAoaGFwcGVucyB3aGVuIHdlIGdldCB0byB0aGUgZW5kIG9mIGZpbGUpCgkJCgkJCgkJYnl0
ZVtdIG5ld0J1ZiA9IG51bGw7CgkJCgkJaWYgKGluZGV4SW4gPiAwIHx8IGJ5dGVzUmVhZCA8IGJ1
ZmZlci5sZW5ndGgpIHsKCQkJbmV3QnVmID0gbmV3IGJ5dGVbYnl0ZXNSZWFkLWluZGV4SW5dOwoJ
CQlpbnQgeiA9IDA7CgkJICAgIGZvciAoaW50IGkgPSBpbmRleEluOyBpIDwgYnl0ZXNSZWFkOyBp
KyspIHsKCQkgICAgCW5ld0J1Zlt6KytdID0gYnVmZmVyW2ldOwoJCSAgICB9CgkJICAgIAoJCSAg
ICBTeXN0ZW0ub3V0LnByaW50bG4oInNocmluayBidWYgdG8gIiArIG5ld0J1Zi5sZW5ndGgpOwoJ
CSAgICAKCQkgICAgYnVmZmVyID0gbmV3QnVmOwoJCX0JCgkJCgkgICAgYnl0ZVtdIG1hcmtlckJ5
dGVzID0gX21hcmtlci5nZXRCeXRlcygpOwoKCSAgICAvLyBub3cgYXQgY29udGVudCBzdGFydCwg
YnV0IGhhdmUgd2UgcmVhY2hlZCBzdGFydCBvZiBuZXh0IGF0dGFjaG1lbnQgdG9vIQoJICAgIAoJ
ICAgIGJ5dGVbXSBsYXN0RmlsZUJ1ZiA9IG51bGw7CgkgICAgaW50IGluZGV4T3V0ID0gLTE7Cgkg
ICAgCgkgICAgaWYgKGJ1ZmZlciAhPSBudWxsICYmIG5ldyBTdHJpbmcoYnVmZmVyKS5jb250YWlu
cyhfbWFya2VyKSkgewogICAgCQkKICAgIAkJLy8gcmVhY2hlZCBlbmQgbWFya2VyCiAgICAJCQkJ
CQkgICAgCQogICAgCQlpbmRleE91dCA9IGluZGV4T2YoYnVmZmVyLCBtYXJrZXJCeXRlcykgLSAy
OwogICAgCQkJCSAgICAJCQogICAgCQlTeXN0ZW0ub3V0LnByaW50bG4oImVuZCBtYXJrZXIgZm9y
IGZpbGUgaXMgYXQgIiArIGluZGV4T3V0ICsgIiBvZiAiICsgYnVmZmVyLmxlbmd0aCk7CiAgICAJ
CQogICAgCQlpZiAoaW5kZXhPdXQgPiAwKSB7CiAgICAJCQlsYXN0RmlsZUJ1ZiA9IG5ldyBieXRl
W2luZGV4T3V0XTsKICAgIAkJCWludCB6ID0gMDsKICAgIAkJCWZvciAoaW50IGkgPSAwOyBpIDwg
aW5kZXhPdXQ7IGkrKykgewogICAgCQkJCWxhc3RGaWxlQnVmW3orK10gPSBidWZmZXJbaV07CiAg
ICAJCQl9CiAgICAJCX0KICAgIAkJCiAgICAJCWludCBlbmQgPSBpbmRleE91dCttYXJrZXJCeXRl
cy5sZW5ndGgrNjsKICAgIAkJaW50IHNpemUgPSBidWZmZXIubGVuZ3RoLWVuZDsKICAgIAkJCgkg
ICAgCVN5c3RlbS5vdXQucHJpbnRsbigicmVtYWluZGVyIGlzICIgKyBlbmQpOwoKCQkgICAgLy8g
cHJlcGFyZSBmb3IgbmV4dCBhdHRhY2htZW50IGlmIChhbnkpCgkJICAgIAoJCSAgICBpZiAoc2l6
ZSA+IDApIHsKCQkgICAgCQkJCSAgICAJCgkJICAgIAlieXRlW10gbmV4dEZpbGVCdWYgPSBuZXcg
Ynl0ZVtzaXplXTsKCQkgICAgCWludCB6ID0gMDsKCQkgICAgCWZvciAoaW50IGkgPSBlbmQ7IGkg
PCBidWZmZXIubGVuZ3RoOyBpKyspIHsKCQkgICAgCQluZXh0RmlsZUJ1Zlt6KytdID0gYnVmZmVy
W2ldOwoJCSAgICAJfQoJCSAgICAKCQkgICAgCWJ1ZmZlciA9IG5leHRGaWxlQnVmOwoJCSAgICAJ
CgkJICAgIH0gZWxzZSB7CgkJICAgIAlidWZmZXIgPSBudWxsOwoJCSAgICB9CQkJICAgIAogICAg
CX0KCSAgICAJCSAgICAKCSAgICBpZiAob3V0ID09IG51bGwgfHwgbGFzdEZpbGVCdWYgIT0gbnVs
bCkgewoJCQkJICAgIAkKCSAgICAJLy8gY3VycmVudCBmaWxlIG5vdCB5ZXQgc3RhcnRlZCwgb3Bl
biBpdAoJICAgIAkKCSAgICAJaWYgKG91dCA9PSBudWxsKSB7CgkJICAgIAkJCQkJCQoJICAgIAkJ
aWYgKF9leHQgIT0gbnVsbCAmJiAhdGhpcy5maWxlTmFtZS5lbmRzV2l0aChfZXh0KSkgewoJCQkJ
CWlmIChfZXh0LnN0YXJ0c1dpdGgoIi4iKSkKCQkJCQkJdGhpcy5maWxlTmFtZSArPSBfZXh0OwoJ
CQkJCWVsc2UKCQkJCQkJdGhpcy5maWxlTmFtZSArPSAiLiIgKyBfZXh0OwoJCQkJfQoJCQkJCQkJ
CQkJCQkKCQkJCW91dCA9IG5ldyBGaWxlT3V0cHV0U3RyZWFtKG5ldyBGaWxlKF9wYXRoLCB0aGlz
LmZpbGVOYW1lKSk7CgkgICAgCX0gCgkgICAgCQoJICAgIAlpZiAobGFzdEZpbGVCdWYgIT0gbnVs
bCkgewoJCQkKCQkgICAgCS8vIHJlYWNoZWQgZW5kIG9mIGN1cnJlbnQgZmlsZSwgd3JpdGUgZW5k
IG9mIGZpbGUKCgkJCQlTeXN0ZW0ub3V0LnByaW50bG4oImZpbmlzaGluZyBjdXJyZW50IGZpbGUi
KTsKCQkJCQoJCQkJb3V0LndyaXRlKGxhc3RGaWxlQnVmKTsKCQkJCW91dC5jbG9zZSgpOwoJCQkJ
dGhpcy5sYXN0UmVhZEZpbGUgPSB0aGlzLmZpbGVOYW1lOwoJCQkJdGhpcy5maWxlTmFtZSA9IG51
bGw7CgkJCQlvdXQgPSBudWxsOwoJCQkJCgkJCQkvLyBzdGFydCBuZXh0IGZpbGUgCgkJCQkJCQkK
CQkJCWlmIChidWZmZXIgIT0gbnVsbCkKCQkJCQlvdXQgPSB0aGlzLnJlYWRNaW1lRGF0YUZyb21C
dWZmZXIoYnVmZmVyLCBidWZmZXIubGVuZ3RoLCBvdXQpOwoJCQkJCgkJCQlTeXN0ZW0ub3V0LnBy
aW50bG4oIj4+Pj4+PiBiYWNraW5nIG91dCBvZiBjdXJyZW50IHJlbWFpbmRlciIpOwoJCQkJCgkJ
CX0gZWxzZSB7CgkJCQkvLyBlbmQgb2YgZmlsZSBpcyBvdXRzaWRlIG9mIGJ1ZmZlciwgc28ganVz
dCB3cml0ZSBidWYKCQkJCQoJCQkJU3lzdGVtLm91dC5wcmludGxuKCJ3cml0aW5nIGN1cnJlbnQg
YnVmZmVyIHRvIG5ldyBmaWxlICIgKyB0aGlzLmZpbGVOYW1lICsgIiAvICIgKyBvdXQpOwoJCQkJ
CgkJCQlvdXQud3JpdGUoYnVmZmVyKTsKCQkJfQoJCQkKCQl9IGVsc2UgaWYgKGJ1ZmZlciAhPSBu
dWxsKSB7CgkJCQoJCQkvLyByaWdodCBpbiB0aGUgbWlkZGxlLCBzbyB3cml0ZSBidWZmZXIgdG8g
ZXhpc3Rpbmcgb3V0cHV0CgkJCQoJCQlTeXN0ZW0ub3V0LnByaW50bG4oIndyaXRpbmcgY3VycmVu
dCBidWZmZXIgdG8gIiArIHRoaXMuZmlsZU5hbWUpOwoJCQkKCQkJb3V0LndyaXRlKGJ1ZmZlcik7
CgkJfQoJICAgIAoJICAgIHJldHVybiBvdXQ7Cgl9CQkKfQoKcHVibGljIHN0YXRpYyBpbnQgaW5k
ZXhPZihieXRlW10gZGF0YSwgYnl0ZVtdIHBhdHRlcm4pIHsKCSAgIAoJaW50W10gZmFpbHVyZSA9
IGNvbXB1dGVGYWlsdXJlKHBhdHRlcm4pOwoKICAgIGludCBqID0gMDsKCiAgICBmb3IgKGludCBp
ID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHsKICAgICAgICB3aGlsZSAoaiA+IDAgJiYgcGF0
dGVybltqXSAhPSBkYXRhW2ldKSB7CiAgICAgICAgICAgIGogPSBmYWlsdXJlW2ogLSAxXTsKICAg
ICAgICB9CiAgICAgICAgaWYgKHBhdHRlcm5bal0gPT0gZGF0YVtpXSkgeyAKICAgICAgICAgICAg
aisrOyAKICAgICAgICB9CiAgICAgICAgaWYgKGogPT0gcGF0dGVybi5sZW5ndGgpIHsKICAgICAg
ICAgICAgcmV0dXJuIGkgLSBwYXR0ZXJuLmxlbmd0aCArIDE7CiAgICAgICAgfQogICAgfQogICAg
cmV0dXJuIC0xOwp9Cgpwcml2YXRlIHN0YXRpYyBpbnRbXSBjb21wdXRlRmFpbHVyZShieXRlW10g
cGF0dGVybikgewogICAKCWludFtdIGZhaWx1cmUgPSBuZXcgaW50W3BhdHRlcm4ubGVuZ3RoXTsK
CiAgICBpbnQgaiA9IDA7CiAgICBmb3IgKGludCBpID0gMTsgaSA8IHBhdHRlcm4ubGVuZ3RoOyBp
KyspIHsKICAgICAgICB3aGlsZSAoaj4wICYmIHBhdHRlcm5bal0gIT0gcGF0dGVybltpXSkgewog
ICAgICAgICAgICBqID0gZmFpbHVyZVtqIC0gMV07CiAgICAgICAgfQogICAgICAgIGlmIChwYXR0
ZXJuW2pdID09IHBhdHRlcm5baV0pIHsKICAgICAgICAgICAgaisrOwogICAgICAgIH0KICAgICAg
ICBmYWlsdXJlW2ldID0gajsKICAgIH0KCiAgICByZXR1cm4gZmFpbHVyZTsKfQoKcHVibGljIHN0
YXRpYyBTdHJpbmcgdG9IZXgoYnl0ZVtdIGJ5dGVzKSB7CglCaWdJbnRlZ2VyIGJpID0gbmV3IEJp
Z0ludGVnZXIoMSwgYnl0ZXMpOwoJcmV0dXJuIFN0cmluZy5mb3JtYXQoIiUwIiArIChieXRlcy5s
ZW5ndGggPDwgMSkgKyAiWCIsIGJpKTsKfQoKcHJpdmF0ZSBzdGF0aWMgSURhdGEgbWFrZVZhbHVl
c0ludG9JRGF0YShWYWx1ZXMgdikgewoJCglJRGF0YSBvdXQgPSBJRGF0YUZhY3RvcnkuY3JlYXRl
KCk7CglJRGF0YUN1cnNvciBjID0gb3V0LmdldEN1cnNvcigpOwoJCglFbnVtZXJhdGlvbjxTdHJp
bmc+IGUgPSB2LmtleXMoKTsKCQoJd2hpbGUgKGUuaGFzTW9yZUVsZW1lbnRzKCkpIHsKCQlTdHJp
bmcga2V5ID0gZS5uZXh0RWxlbWVudCgpOwoJCU9iamVjdCAgdmFsdWUgPSB2LmdldChrZXkpOwoJ
CQoJCUlEYXRhVXRpbC5wdXQoYywga2V5LCB2YWx1ZSk7Cgl9CgkKCWMuZGVzdHJveSgpOwoJcmV0
dXJuIG91dDsKfQoKcHJpdmF0ZSBzdGF0aWMgY2xhc3MgRGlyQ29waWVyIGV4dGVuZHMgU2ltcGxl
RmlsZVZpc2l0b3I8UGF0aD4gewoJCglwcml2YXRlIFBhdGggX3NyYzsKCXByaXZhdGUgUGF0aCBf
dGd0OwoJCglEaXJDb3BpZXIoUGF0aCBzcmMsIFBhdGggdGd0KSB7CgkJCgkJdGhpcy5fc3JjID0g
c3JjOwoJCXRoaXMuX3RndCA9IHRndDsKCX0KCQoJcHVibGljIHZvaWQgY29weShib29sZWFuIG92
ZXJ3cml0ZSkgdGhyb3dzIElPRXhjZXB0aW9uLCBTZXJ2aWNlRXhjZXB0aW9uIHsKCQkKCQlpZiAo
dGhpcy5fdGd0LnRvRmlsZSgpLmV4aXN0cygpICYmIG92ZXJ3cml0ZSkKCQkJdGhpcy5fdGd0LnRv
RmlsZSgpLmRlbGV0ZSgpOwoJCWVsc2UgaWYgKHRoaXMuX3RndC50b0ZpbGUoKS5leGlzdHMoKSkK
CQkJdGhyb3cgbmV3IFNlcnZpY2VFeGNlcHRpb24oIlRhcmdldCBkaXJlY3RvcnkgYWxyZWFkeSBl
eGlzdHMgYW5kIG92ZXJ3cml0ZSBub3Qgc3BlY2lmaWVkITogIiArIHRoaXMuX3RndC50b0ZpbGUo
KS5nZXRDYW5vbmljYWxQYXRoKCkpOwoJCQoJCSBGaWxlcy53YWxrRmlsZVRyZWUoX3NyYywgdGhp
cyk7Cgl9CgkKCUBPdmVycmlkZQogICAgcHVibGljIEZpbGVWaXNpdFJlc3VsdCB2aXNpdEZpbGUo
UGF0aCBmaWxlLCBCYXNpY0ZpbGVBdHRyaWJ1dGVzIGF0dHJpYnV0ZXMpIHsKIAogICAgICAgIHRy
eSB7CiAgICAgICAgICAgIFBhdGggdGFyZ2V0RmlsZSA9IF90Z3QucmVzb2x2ZShfc3JjLnJlbGF0
aXZpemUoZmlsZSkpOwogICAgICAgICAgICBGaWxlcy5jb3B5KGZpbGUsIHRhcmdldEZpbGUpOwog
ICAgICAgIH0gY2F0Y2ggKElPRXhjZXB0aW9uIGV4KSB7CiAgICAgICAgICAgIFN5c3RlbS5lcnIu
cHJpbnRsbihleCk7CiAgICAgICAgfQogCiAgICAgICAgcmV0dXJuIEZpbGVWaXNpdFJlc3VsdC5D
T05USU5VRTsKICAgIH0KIAogICAgQE92ZXJyaWRlCiAgICBwdWJsaWMgRmlsZVZpc2l0UmVzdWx0
IHByZVZpc2l0RGlyZWN0b3J5KFBhdGggZGlyLCBCYXNpY0ZpbGVBdHRyaWJ1dGVzIGF0dHJpYnV0
ZXMpIHsKICAgICAgICB0cnkgewogICAgICAgICAgICBQYXRoIG5ld0RpciA9IF90Z3QucmVzb2x2
ZShfc3JjLnJlbGF0aXZpemUoZGlyKSk7CiAgICAgICAgICAgIEZpbGVzLmNyZWF0ZURpcmVjdG9y
eShuZXdEaXIpOwogICAgICAgIH0gY2F0Y2ggKElPRXhjZXB0aW9uIGV4KSB7CiAgICAgICAgICAg
IFN5c3RlbS5lcnIucHJpbnRsbihleCk7CiAgICAgICAgfQogCiAgICAgICAgcmV0dXJuIEZpbGVW
aXNpdFJlc3VsdC5DT05USU5VRTsKICAgIH0KfQoKcHJpdmF0ZSBzdGF0aWMgdm9pZCBkZWxldGVE
aXIoRmlsZSBlbGVtZW50KSB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7CiAgICBpZiAoZWxlbWVu
dC5pc0RpcmVjdG9yeSgpKSB7CiAgICAJaWYgKGVsZW1lbnQubGlzdEZpbGVzKCkgIT0gbnVsbCkg
ewogICAgCQlmb3IgKEZpbGUgc3ViIDogZWxlbWVudC5saXN0RmlsZXMoKSkgewogICAgCQkJZGVs
ZXRlRGlyKHN1Yik7CiAgICAJCX0KICAgIAl9CiAgICB9CiAgICAJCSAgICAKICAgIGlmICghZWxl
bWVudC5kZWxldGUoKSkKICAgIAl0aHJvdyBuZXcgU2VydmljZUV4Y2VwdGlvbigiQ2Fubm90IGRl
bGV0ZSBmaWxlICciICsgZWxlbWVudC5nZXRBYnNvbHV0ZVBhdGgoKSk7Cn0KCnByaXZhdGUgc3Rh
dGljIExpc3Q8U3RyaW5nPiBsaXN0ZihTdHJpbmcgZGlyLCBTdHJpbmcgZmlsdGVyKSB0aHJvd3Mg
U2VydmljZUV4Y2VwdGlvbiB7CgkKCUZpbGUgZGlyZWN0b3J5ID0gbmV3IEZpbGUoZGlyKTsKCiAg
ICBMaXN0PFN0cmluZz4gcmVzdWx0TGlzdCA9IG5ldyBBcnJheUxpc3Q8U3RyaW5nPigpOwoKICAg
IC8vIGdldCBhbGwgdGhlIGZpbGVzIGZyb20gYSBkaXJlY3RvcnkKICAgIEZpbGVbXSBmTGlzdCA9
IGRpcmVjdG9yeS5saXN0RmlsZXMoKTsKICAgIAogICAgaWYgKGZMaXN0ICE9IG51bGwpIHsKICAg
IAlmb3IgKEZpbGUgZmlsZSA6IGZMaXN0KSB7CiAgICAJCiAgICAJCWlmIChmaWxlLmlzRmlsZSgp
ICYmIChmaWx0ZXIgPT0gbnVsbCB8fCBmaWxlLmdldE5hbWUoKS5tYXRjaGVzKGZpbHRlcikpKSB7
CiAgICAJCQlyZXN1bHRMaXN0LmFkZChmaWxlLmdldEFic29sdXRlUGF0aCgpKTsKICAgIAkKICAg
IAkJfSBlbHNlIGlmIChmaWxlLmlzRGlyZWN0b3J5KCkpIHsKICAgIAkJCXJlc3VsdExpc3QuYWRk
QWxsKGxpc3RmKGZpbGUuZ2V0QWJzb2x1dGVQYXRoKCksIGZpbHRlcikpOwogICAgCQl9CiAgICAJ
fQogICAgCiAgICAJcmV0dXJuIHJlc3VsdExpc3Q7CiAgICB9IGVsc2UgewogICAgCS8vdGhyb3cg
bmV3IFNlcnZpY2VFeGNlcHRpb24oIk5vIGZpbGVzIGZvdW5kIGZvcjogIiArIGRpcik7CiAgICAJ
CiAgICAJcmV0dXJuIG51bGw7CiAgICB9Cn0KCnByaXZhdGUgc3RhdGljIGNsYXNzIFppcHBlciB7
CgkKCXByaXZhdGUgU3RyaW5nIF9zb3VyY2VGb2xkZXI7CgkKCXByaXZhdGUgTGlzdCA8U3RyaW5n
PiBmaWxlTGlzdCA9IG5ldyBBcnJheUxpc3Q8U3RyaW5nPigpOwoJCglwdWJsaWMgdm9pZCB6aXBJ
dChTdHJpbmcgc291cmNlRm9sZGVyLCBTdHJpbmcgemlwRmlsZSkgewoJCQoJCXRoaXMuX3NvdXJj
ZUZvbGRlciA9IHNvdXJjZUZvbGRlcjsKCQoJCXRoaXMuZ2VuZXJhdGVGaWxlTGlzdChuZXcgRmls
ZShzb3VyY2VGb2xkZXIpKTsKCQkJCgkgICAgYnl0ZVtdIGJ1ZmZlciA9IG5ldyBieXRlWzEwMjRd
OwoJICAgIFN0cmluZyBzb3VyY2UgPSBuZXcgRmlsZShzb3VyY2VGb2xkZXIpLmdldE5hbWUoKTsK
CSAgICBGaWxlT3V0cHV0U3RyZWFtIGZvcyA9IG51bGw7CgkgICAgWmlwT3V0cHV0U3RyZWFtIHpv
cyA9IG51bGw7CgkgICAgdHJ5IHsKCSAgICAgICAgZm9zID0gbmV3IEZpbGVPdXRwdXRTdHJlYW0o
emlwRmlsZSk7CgkgICAgICAgIHpvcyA9IG5ldyBaaXBPdXRwdXRTdHJlYW0oZm9zKTsKCQoJICAg
ICAgICBTeXN0ZW0ub3V0LnByaW50bG4oIk91dHB1dCB0byBaaXAgOiAiICsgemlwRmlsZSk7Cgkg
ICAgICAgIEZpbGVJbnB1dFN0cmVhbSBpbiA9IG51bGw7CgkKCSAgICAgICAgZm9yIChTdHJpbmcg
ZmlsZTogdGhpcy5maWxlTGlzdCkgewoJICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKCJG
aWxlIEFkZGVkIDogIiArIGZpbGUpOwoJICAgICAgICAgICAgWmlwRW50cnkgemUgPSBuZXcgWmlw
RW50cnkoc291cmNlICsgRmlsZS5zZXBhcmF0b3IgKyBmaWxlKTsKCSAgICAgICAgICAgIHpvcy5w
dXROZXh0RW50cnkoemUpOwoJICAgICAgICAgICAgdHJ5IHsKCSAgICAgICAgICAgICAgICBpbiA9
IG5ldyBGaWxlSW5wdXRTdHJlYW0odGhpcy5fc291cmNlRm9sZGVyICsgRmlsZS5zZXBhcmF0b3Ig
KyBmaWxlKTsKCSAgICAgICAgICAgICAgICBpbnQgbGVuOwoJICAgICAgICAgICAgICAgIHdoaWxl
ICgobGVuID0gaW4gLnJlYWQoYnVmZmVyKSkgPiAwKSB7CgkgICAgICAgICAgICAgICAgICAgIHpv
cy53cml0ZShidWZmZXIsIDAsIGxlbik7CgkgICAgICAgICAgICAgICAgfQoJICAgICAgICAgICAg
fSBmaW5hbGx5IHsKCSAgICAgICAgICAgICAgICBpbi5jbG9zZSgpOwoJICAgICAgICAgICAgfQoJ
ICAgICAgICB9CgkKCSAgICAgICAgem9zLmNsb3NlRW50cnkoKTsKCSAgICAgICAgU3lzdGVtLm91
dC5wcmludGxuKCJGb2xkZXIgc3VjY2Vzc2Z1bGx5IGNvbXByZXNzZWQiKTsKCQoJICAgIH0gY2F0
Y2ggKElPRXhjZXB0aW9uIGV4KSB7CgkgICAgICAgIGV4LnByaW50U3RhY2tUcmFjZSgpOwoJICAg
IH0gZmluYWxseSB7CgkgICAgICAgIHRyeSB7CgkgICAgICAgICAgICB6b3MuY2xvc2UoKTsKCSAg
ICAgICAgfSBjYXRjaCAoSU9FeGNlcHRpb24gZSkgewoJICAgICAgICAgICAgZS5wcmludFN0YWNr
VHJhY2UoKTsKCSAgICAgICAgfQoJICAgIH0KCX0KCQoJcHVibGljIHZvaWQgZ2VuZXJhdGVGaWxl
TGlzdChGaWxlIG5vZGUpIHsKCSAgICAvLyBhZGQgZmlsZSBvbmx5CgkgICAgaWYgKG5vZGUuaXNG
aWxlKCkpIHsKCSAgICAgICAgZmlsZUxpc3QuYWRkKGdlbmVyYXRlWmlwRW50cnkobm9kZS50b1N0
cmluZygpKSk7CgkgICAgfQoJCgkgICAgaWYgKG5vZGUuaXNEaXJlY3RvcnkoKSkgewoJICAgICAg
ICBTdHJpbmdbXSBzdWJOb3RlID0gbm9kZS5saXN0KCk7CgkgICAgICAgIGZvciAoU3RyaW5nIGZp
bGVuYW1lOiBzdWJOb3RlKSB7CgkgICAgICAgICAgICBnZW5lcmF0ZUZpbGVMaXN0KG5ldyBGaWxl
KG5vZGUsIGZpbGVuYW1lKSk7CgkgICAgICAgIH0KCSAgICB9Cgl9CgkKCXByaXZhdGUgU3RyaW5n
IGdlbmVyYXRlWmlwRW50cnkoU3RyaW5nIGZpbGUpIHsKCQkJCQoJICAgIHJldHVybiBmaWxlLnN1
YnN0cmluZyhfc291cmNlRm9sZGVyLmxlbmd0aCgpICsgMSwgZmlsZS5sZW5ndGgoKSk7Cgl9Cn0K
CnB1YmxpYyBzdGF0aWMgY2xhc3MgVW56aXBGaWxlcyB7CgkKICAgIHByaXZhdGUgc3RhdGljIHZv
aWQgdW56aXAoU3RyaW5nIHppcEZpbGVQYXRoLCBTdHJpbmcgZGVzdERpcikgewogICAgICAgIEZp
bGUgZGlyID0gbmV3IEZpbGUoZGVzdERpcik7CiAgICAgICAgLy8gY3JlYXRlIG91dHB1dCBkaXJl
Y3RvcnkgaWYgaXQgZG9lc24ndCBleGlzdAogICAgICAgIGlmKCFkaXIuZXhpc3RzKCkpIGRpci5t
a2RpcnMoKTsKICAgICAgICBGaWxlSW5wdXRTdHJlYW0gZmlzOwogICAgICAgIC8vYnVmZmVyIGZv
ciByZWFkIGFuZCB3cml0ZSBkYXRhIHRvIGZpbGUKICAgICAgICBieXRlW10gYnVmZmVyID0gbmV3
IGJ5dGVbMTAyNF07CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgZmlzID0gbmV3IEZpbGVJbnB1
dFN0cmVhbSh6aXBGaWxlUGF0aCk7CiAgICAgICAgICAgIFppcElucHV0U3RyZWFtIHppcyA9IG5l
dyBaaXBJbnB1dFN0cmVhbShmaXMpOwogICAgICAgICAgICBaaXBFbnRyeSB6ZSA9IHppcy5nZXRO
ZXh0RW50cnkoKTsKICAgICAgICAgICAgd2hpbGUoemUgIT0gbnVsbCl7CiAgICAgICAgICAgICAg
ICBTdHJpbmcgZmlsZU5hbWUgPSB6ZS5nZXROYW1lKCk7CiAgICAgICAgICAgICAgICBGaWxlIG5l
d0ZpbGUgPSBuZXcgRmlsZShkZXN0RGlyICsgRmlsZS5zZXBhcmF0b3IgKyBmaWxlTmFtZSk7CiAg
ICAgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oIlVuemlwcGluZyB0byAiK25ld0ZpbGUu
Z2V0QWJzb2x1dGVQYXRoKCkpOwogICAgICAgICAgICAgICAgLy9jcmVhdGUgZGlyZWN0b3JpZXMg
Zm9yIHN1YiBkaXJlY3RvcmllcyBpbiB6aXAKICAgICAgICAgICAgICAgIG5ldyBGaWxlKG5ld0Zp
bGUuZ2V0UGFyZW50KCkpLm1rZGlycygpOwogICAgICAgICAgICAgICAgRmlsZU91dHB1dFN0cmVh
bSBmb3MgPSBuZXcgRmlsZU91dHB1dFN0cmVhbShuZXdGaWxlKTsKICAgICAgICAgICAgICAgIGlu
dCBsZW47CiAgICAgICAgICAgICAgICB3aGlsZSAoKGxlbiA9IHppcy5yZWFkKGJ1ZmZlcikpID4g
MCkgewogICAgICAgICAgICAgICAgZm9zLndyaXRlKGJ1ZmZlciwgMCwgbGVuKTsKICAgICAgICAg
ICAgICAgIH0KICAgICAgICAgICAgICAgIGZvcy5jbG9zZSgpOwogICAgICAgICAgICAgICAgLy9j
bG9zZSB0aGlzIFppcEVudHJ5CiAgICAgICAgICAgICAgICB6aXMuY2xvc2VFbnRyeSgpOwogICAg
ICAgICAgICAgICAgemUgPSB6aXMuZ2V0TmV4dEVudHJ5KCk7CiAgICAgICAgICAgIH0KICAgICAg
ICAgICAgLy9jbG9zZSBsYXN0IFppcEVudHJ5CiAgICAgICAgICAgIHppcy5jbG9zZUVudHJ5KCk7
CiAgICAgICAgICAgIHppcy5jbG9zZSgpOwogICAgICAgICAgICBmaXMuY2xvc2UoKTsKICAgICAg
ICB9IGNhdGNoIChJT0V4Y2VwdGlvbiBlKSB7CiAgICAgICAgICAgIGUucHJpbnRTdGFja1RyYWNl
KCk7CiAgICAgICAgfQogICAgICAgIAogICAgfQp9Cgk=</value>
  <value name="encodeutf8">true</value>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
  <array name="imports" type="value" depth="1">
    <value>com.wm.app.b2b.server.ServerAPI</value>
    <value>com.ibm.icu.text.SimpleDateFormat</value>
    <value>com.wm.util.coder.JSONCoder</value>
    <value>java.io.BufferedOutputStream</value>
    <value>java.io.BufferedReader</value>
    <value>java.io.ByteArrayInputStream</value>
    <value>java.io.File</value>
    <value>java.io.FileInputStream</value>
    <value>java.io.FileOutputStream</value>
    <value>java.io.FilenameFilter</value>
    <value>java.io.IOException</value>
    <value>java.io.InputStream</value>
    <value>java.io.InputStreamReader</value>
    <value>java.io.OutputStream</value>
    <value>java.math.BigInteger</value>
    <value>java.nio.file.CopyOption</value>
    <value>java.nio.file.FileAlreadyExistsException</value>
    <value>java.nio.file.FileSystems</value>
    <value>java.nio.file.FileVisitResult</value>
    <value>java.nio.file.Files</value>
    <value>java.nio.file.NoSuchFileException</value>
    <value>java.nio.file.Path</value>
    <value>java.nio.file.Paths</value>
    <value>java.nio.file.SimpleFileVisitor</value>
    <value>java.nio.file.StandardCopyOption</value>
    <value>java.nio.file.attribute.BasicFileAttributes</value>
    <value>java.util.ArrayList</value>
    <value>java.util.Date</value>
    <value>java.util.Enumeration</value>
    <value>java.util.List</value>
    <value>java.util.zip.ZipEntry</value>
    <value>java.util.zip.ZipInputStream</value>
    <value>java.util.zip.ZipOutputStream</value>
    <value>org.apache.commons.compress.archivers.tar.TarArchiveEntry</value>
    <value>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</value>
    <value>org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream</value>
    <value>org.apache.commons.compress.utils.IOUtils</value>
  </array>
</Values>
